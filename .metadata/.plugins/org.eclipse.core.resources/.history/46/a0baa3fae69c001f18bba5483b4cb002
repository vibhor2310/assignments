package com.springboot.insurance_app.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.springboot.insurance_app.dto.ResponseMessageDto;
import com.springboot.insurance_app.exception.ResourceNotFoundException;
import com.springboot.insurance_app.model.Claim;
import com.springboot.insurance_app.model.Executive;
import com.springboot.insurance_app.model.Policy;
import com.springboot.insurance_app.model.PolicyHolder;
import com.springboot.insurance_app.service.ExecutiveService;
import com.springboot.insurance_app.service.PolicyHolderService;
import com.springboot.insurance_app.service.PolicyService;

@RestController
public class ClaimController {
	
	@Autowired
	private PolicyService policyService;
	
	@Autowired
	private PolicyHolderService policyHolderService;
	
	@Autowired
	private ExecutiveService executiveService;
	
	@PostMapping("/claim/process/{policyId}/{policyHolderId}/{executiveId}")
	public ResponseEntity processClaim(@PathVariable int policyId,@PathVariable int policyHolderId,@PathVariable int executiveId,@RequestBody Claim claim,ResponseMessageDto dto) {
		// validate policyHolderId;
		PolicyHolder policyHolder = null;
		
		try {
			policyHolder = policyHolderService.validate(policyId);
		} catch (ResourceNotFoundException e) {
			dto.setMsg(e.getMessage());
			 return ResponseEntity.badRequest().body(dto);
		}
		
		// validate policyId
		
		Policy policy = null;
		
		try {
			policy = policyService.validate(policyId);
		} catch (ResourceNotFoundException e) {
			dto.setMsg(e.getMessage());
			 return ResponseEntity.badRequest().body(dto);
		}
		
		// validate executive id;
		
		Executive executive = null;
		
		executive = executiveService.validate(executiveId);
		
		
		
		
		
		
		
		
	}

}
